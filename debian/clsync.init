#! /bin/sh
### BEGIN INIT INFO
# Provides:          clsync
# Should-Start:      $remote_fs $local_fs $syslog
# Should-Stop:       $remote_fs $local_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: clsync daemon init script
# Description:       This script launches the clsync daemon.
### END INIT INFO

# bugtrack: https://github.com/xaionaro/clsync/issues

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="syncer daemon"
NAME=clsync
DAEMON=/usr/bin/$NAME
PIDFILE=/var/run/$NAME.pid
ARGS="--pid-file ${PIDFILE} --background"
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

[ "$CLSYNC_ENABLE" != "true" ] && exit 0

IONICE="/usr/bin/ionice"
if [ "$CLSYNC_IONICE_CLASS" != "" ]; then
	IONICE_ARGS="-c $CLSYNC_IONICE_CLASS"
else
	IONICE_ARGS="-c 3"
fi

. /lib/lsb/init-functions

do_start() {

	start-stop-daemon --start --quiet --pidfile "$PIDFILE" \
		--exec "$DAEMON" --test > /dev/null \
			|| return 1

	start-stop-daemon --start --quiet --pidfile "$PIDFILE" \
		--exec $IONICE -- $IONICE_ARGS "$DAEMON" $ARGS $CLSYNC_ARGS \
			|| return 2
}

do_stop() {

	start-stop-daemon --stop --quiet --pidfile "$PIDFILE" --name "$NAME"

	RC="$?"
	[ "$RC" = 2 ] && return 2

	start-stop-daemon --stop --quiet --oknodo --exec "$DAEMON"

	[ "$?" = 2 ] && return 2

	rm -f "$PIDFILE"
	return "$RC"
}

do_reload() {

	start-stop-daemon --stop --signal 1 --quiet --pidfile "$PIDFILE" --name "$NAME"

	return 0

}

case "$1" in
	start)
		log_daemon_msg "Starting $DESC" "$NAME"
		do_start
		case "$?" in
			0|1)
				log_end_msg 0
				;;
			2)
				log_end_msg 1
				;;
		esac
		;;
	stop)
		log_daemon_msg "Stopping $DESC" "$NAME"
		do_stop
		case "$?" in
			0|1)
				log_end_msg 0
				;;
			2)
				log_end_msg 1
				;;
		esac
		;;
	status)
		status_of_proc $DAEMON $NAME && exit 0 || exit $?
		;;
	restart|force-reload)
		log_daemon_msg "Restarting $DESC" "$NAME"
		do_stop
		case "$?" in
			0|1)
				do_start
				case "$?" in
					0) log_end_msg 0 ;;
					1) log_end_msg 1 ;; # Old process is still running
					*) log_end_msg 1 ;; # Failed to start
				esac
				;;
			*)
				# Failed to stop
				log_end_msg 1
				;;
		esac
		;;
	*)
		echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
		exit 3
		;;
esac

exit 0

